{
    "collab_server" : "",
    "contents" : "#Ridge, Lasso & Elastic Net Regression\n#POWERED BY NKL, USE FOR SIAP ONLY!\n\n\nrequire(glmnet)\nrequire(rstudioapi)\n\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\n#setwd(\"../CSV Files/Start point\")\n#setwd(\"../CSV Files/Attrs with bad dist removed\")\n#setwd(\"../CSV Files/AWBD and outliers removed\")\n#setwd(\"../CSV Files/AWBD and outliers removed, remod attr added\")\n#setwd(\"../CSV Files/AWBD, extreme outlier removing,  remod added\")\n#setwd(\"../CSV Files/Outliers removed, remod attr added\")\n\n#setwd(\"../CSV Files/Clusterized/Attrs with bad dist removed\")\n#setwd(\"../CSV Files/Clusterized/AWBD and outliers removed\")\n#setwd(\"../CSV Files/Clusterized/AWBD and outliers removed, remod attr added\")\n#setwd(\"../CSV Files/Clusterized/AWBD, extreme outlier removing,  remod added\")\nsetwd(\"../CSV Files/Clusterized/Outliers removed, remod attr added\")\n\n\n\ntrainData <- read.csv(file=\"train.csv\", header=TRUE, sep=\",\")\nsalePrice.tr <- trainData$SalePrice\ndata.tr <- as.matrix(trainData[, !names(trainData) %in% c(\"SalePrice\", \"Id\")])\n#print(data.tr)\n\ntestData <- read.csv(file=\"test.csv\", header=TRUE, sep=\",\")\nsalePrice.te <- testData$SalePrice\ndata.te <- as.matrix(testData[, !names(testData) %in% c(\"SalePrice\", \"Id\")])\n#print(data.te)\n\nworkingDirectory <- getwd()\n\nif (grepl(\"Clusterized\", getwd())){\n  setwd(\"../../../Log Files/Ridge_Lasso_ENet\")\n}else{\n  setwd(\"../../Log Files/Ridge_Lasso_ENet\")\n}\n\n#FOR ASSOCIATING COEF FILE WITH LOG FILE\nExecTime <- gsub(\":\", \"-\",Sys.time())\n\ncalculate_prediction <- function(alpha_par){\n\n  set.seed(999)\n  rr.cv <- cv.glmnet(data.tr, salePrice.tr, alpha=alpha_par)\n  plot(rr.cv, main = alpha_par)\n\n  zaStampu <- as.matrix(coef(rr.cv, s=\"lambda.min\"))\n  print(zaStampu)\n\n  strAlpha <- paste(\"\\n\\n\\n\\n\\nAlpha =\", alpha_par, sep=\" \")\n\n  forFile <- paste(\"coef\", ExecTime, sep = \"_\")\n  forFile <- paste(forFile, \".txt\", sep=\"\")\n\n  write(strAlpha, file=forFile, append=TRUE)\n  write.table(zaStampu, file=forFile,append=TRUE)\n\n  rr.bestlam <- rr.cv$lambda.min\n  rr.goodlam <- rr.cv$lambda.1se\n\n  # predict validation set using best lambda and calculate RMSE\n  rr.fit <- glmnet(data.tr, salePrice.tr, alpha = alpha_par)\n  plot(rr.fit, xvar = \"lambda\", label = TRUE, main = alpha_par)\n\n  rr.pred <- predict(rr.fit, s = rr.bestlam, newx = data.te)\n\n  str <- paste(\"MSE with alpha =\", alpha_par, \"is\",mean((rr.pred - salePrice.te)^2), sep=\" \")\n\n  print(str)\n\n  return (str)\n\n}\n\n#PREDIKCIJE\npred.r <- calculate_prediction(0)\npred.l <- calculate_prediction(1)\npred.en <- calculate_prediction(0.58)\n\n#ISPIS U FAJL I NA EKRAN\nvreme <- paste(\"Vreme: \", ExecTime, sep=\" \")\nblockSeparator <- \"###############################################################\"\nline <- paste(workingDirectory, vreme, pred.r, pred.l, pred.en, \" \", blockSeparator, \" \", sep = \"\\n\")\nwrite(line,file=\"rezultati_R_L_EN.txt\",append=TRUE)\n",
    "created" : 1492071035358.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1744113282",
    "id" : "F7D41F7",
    "lastKnownWriteTime" : 1492073116,
    "last_content_update" : 1492073116345,
    "path" : "C:/Users/Todorovic/Desktop/SZIAP/House Prices Advanced Regression Techniques/R Project/Ridge_Lasso_ENets.R",
    "project_path" : "Ridge_Lasso_ENets.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}